<UserControl x:Class="Maestro.Wpf.Views.InsertFlightView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Maestro.Wpf"
             xmlns:viewModels="clr-namespace:Maestro.Wpf.ViewModels"
             xmlns:controls="clr-namespace:Maestro.Wpf.Controls"
             Background="{x:Static local:Theme.BackgroundColor}"
             d:DataContext="{d:DesignInstance Type=viewModels:InsertFlightViewModel}"
             mc:Ignorable="d"
             Padding="8"
             MinWidth="320"
             Height="240">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Maestro.Wpf;component/Styles.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource GenericTextStyle}" />
            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBaseStyle}">
                <Setter Property="Margin" Value="2" />
                <Setter Property="Width" Value="64" />
            </Style>

            <Style TargetType="ListBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <TextBlock Text="{Binding}">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource GenericTextStyle}">
                                        <Setter Property="Margin" Value="2"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter Property="Background" Value="#1FFF0000"></Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Grid.Column="0" Margin="0,0,4,0">
            <TextBlock>Over shoot</TextBlock>

            <ListBox
                ItemsSource="{Binding LandedFlights, Mode=TwoWay}"
                SelectedItem="{Binding SelectedFlight, Mode=TwoWay}"
                BorderThickness="0"
                Background="Transparent"
                Height="120">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Callsign}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource InteractiveTextStyle}">
                                    <Style.Triggers>
                                        <DataTrigger
                                            Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem }}}"
                                            Value="True">
                                            <Setter Property="TextBlock.Foreground" Value="{x:Static local:Theme.BackgroundColor}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </DataTemplate>
                </ListBox.ItemTemplate>

                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <ContentPresenter />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Foreground" Value="{x:Static local:Theme.BackgroundColor}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Border Background="{x:Static local:Theme.SelectedButtonColor}" Padding="1">
                                                <ContentPresenter />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
        </StackPanel>

        <StackPanel Grid.Row="0" Grid.Column="1" Margin="4,0,0,0">
            <TextBlock>Pending</TextBlock>

            <ListBox
                ItemsSource="{Binding PendingFlights, Mode=TwoWay}"
                SelectedItem="{Binding SelectedFlight, Mode=TwoWay}"
                BorderThickness="0"
                Background="Transparent"
                Height="120">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Callsign}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource InteractiveTextStyle}">
                                    <Style.Triggers>
                                        <DataTrigger
                                            Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem }}}"
                                            Value="True">
                                            <Setter Property="TextBlock.Foreground" Value="{x:Static local:Theme.BackgroundColor}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </DataTemplate>
                </ListBox.ItemTemplate>

                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <ContentPresenter />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Foreground" Value="{x:Static local:Theme.BackgroundColor}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Border Background="{x:Static local:Theme.SelectedButtonColor}" Padding="1">
                                                <ContentPresenter />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
        </StackPanel>

        <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,4,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0" Text="Callsign"/>
            <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Callsign, Mode=TwoWay}"/>

            <TextBlock Grid.Row="1" Grid.Column="0" Text="Aircraft Type"/>
            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding AircraftType, Mode=TwoWay}"/>

        </Grid>

        <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,4,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Button Grid.Column="1" Content="OK" Command="{Binding InsertCommand}"/>
            <Button Grid.Column="3" Content="Cancel" Command="{Binding CloseWindowCommand}"/>
        </Grid>

    </Grid>
</UserControl>
